--- source/blender/editors/transform/transform_orientations.c	(revision 60799)
+++ source/blender/editors/transform/transform_orientations.c	(working copy)
@@ -100,6 +100,25 @@
 	                  sizeof(((TransformOrientation *)NULL)->name));
 }
 
+
+static TransformOrientation *createManipSpace(bContext *C, ReportList *UNUSED(reports), char *name, int overwrite)
+{
+	TransformOrientation *ts;
+	RegionView3D *rv3d = CTX_wm_region_view3d(C);
+	float mat[3][3];
+
+	if (!rv3d)
+		return NULL;
+
+	copy_m3_m4(mat, rv3d->twsetmat);
+	normalize_m3(mat);
+	
+	ts = addMatrixSpace(C, mat, name, overwrite);
+	copy_v3_v3(ts->loc, rv3d->twsetmat[3]); 
+
+	return ts;
+}
+
 static TransformOrientation *createViewSpace(bContext *C, ReportList *UNUSED(reports), char *name, int overwrite)
 {
 	RegionView3D *rv3d = CTX_wm_region_view3d(C);
@@ -292,9 +311,16 @@
 void BIF_createTransformOrientation(bContext *C, ReportList *reports, char *name, int use_view, int use, int overwrite)
 {
 	TransformOrientation *ts = NULL;
-
-	if (use_view) {
+	View3D *v3d = CTX_wm_view3d(C);
+	
+	if (v3d->twflag & (V3D_SET_MANIPULATOR | V3D_FREE_MANIPULATOR)) {
+		ts = createManipSpace(C, reports, name, overwrite);
+		if (v3d->around == V3D_FREE)
+			ts->useloc = true;
+	}
+	else if (use_view) {
 		ts = createViewSpace(C, reports, name, overwrite);
+		ts->useloc = false;
 	}
 	else {
 		Object *obedit = CTX_data_edit_object(C);
@@ -313,6 +339,7 @@
 		else {
 			ts = createObjectSpace(C, reports, name, overwrite);
 		}
+		ts->useloc = false;
 	}
 
 	if (use && ts != NULL) {
@@ -454,6 +481,24 @@
 	}
 }
 
+bool applyTransformLocation(const bContext *C, float loc[3])
+{
+	TransformOrientation *ts;
+	View3D *v3d = CTX_wm_view3d(C);
+	int selected_index = (v3d->twmode - V3D_MANIP_CUSTOM);
+	int i;
+	
+	if (selected_index >= 0) {
+		for (i = 0, ts = CTX_data_scene(C)->transform_spaces.first; ts; ts = ts->next, i++) {
+			if (selected_index == i) {
+				copy_v3_v3(loc, ts->loc);
+				return (bool)ts->useloc;
+			}
+		}
+	}
+	return false;
+}
+
 static int count_bone_select(bArmature *arm, ListBase *lb, int do_it) 
 {
 	Bone *bone;
@@ -481,6 +526,7 @@
 void initTransformOrientation(bContext *C, TransInfo *t)
 {
 	View3D *v3d = CTX_wm_view3d(C);
+	RegionView3D *rv3d = CTX_wm_region_view3d(C);
 	Object *ob = CTX_data_active_object(C);
 	Object *obedit = CTX_data_active_object(C);
 
@@ -532,8 +578,20 @@
 			}
 			break;
 		default: /* V3D_MANIP_CUSTOM */
-			applyTransformOrientation(C, t->spacemtx, t->spacename);
-			break;
+			{
+				float center[3];
+				bool retval;
+				
+				applyTransformOrientation(C, t->spacemtx, t->spacename);
+				retval = applyTransformLocation(C, center);
+				if (retval) {
+					v3d->twflag |= V3D_FREE_MANIPULATOR;
+					t->flag |= T_MANIP_FREE;
+					v3d->around = V3D_FREE;
+					copy_v3_v3(rv3d->twsetmat[3], center);
+				}
+				break;
+			}
 	}
 }
 
